# .github/workflows/build-and-scan.yml

name: Build & Scan Docker Image

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Trigger the workflow on pushes to the 'main' branch
  pull_request:
    branches: [ main ] # Trigger the workflow on pull requests targeting 'main'

  # Allows you to run this workflow manually from the Actions tab in GitHub
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest # Use the latest Ubuntu Linux runner provided by GitHub

    steps:
      # Step 1: Checkout the repository code
      # This action checks out your repository under $GITHUB_WORKSPACE,
      # so your workflow can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      # Buildx is a Docker CLI plugin that extends the Docker build command
      # with new features like multi-platform builds.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to GitHub Container Registry (GHCR)
      # This step is necessary to push your Docker image to GHCR.
      # It uses your GitHub Token (GITHUB_TOKEN) for authentication.
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Uses the GitHub username that triggered the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Uses the automatically provided GitHub Token

      # Step 4: Build and Push Docker Image
      # This action builds your Docker image and pushes it to GHCR.
      # The image name will be ghcr.io/Specia-cipher/task-manager-app
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # The build context is the current directory (your repo root)
          push: true # Push the image to the registry
          tags: ghcr.io/${{ github.repository_owner }}/task-manager-app:latest # Tag the image with latest
          # You can also add a tag with the commit SHA for versioning:
          # tags: ghcr.io/${{ github.repository_owner }}/task-manager-app:latest,ghcr.io/${{ github.repository_owner }}/task-manager-app:${{ github.sha }}
          cache-from: type=gha # Use GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max # Cache layers for subsequent builds
