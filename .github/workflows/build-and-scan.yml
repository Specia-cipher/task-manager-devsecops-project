# .github/workflows/build-and-scan.yml

name: Build & Scan Docker Image

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Trigger the workflow on pushes to the 'main' branch
  pull_request:
    branches: [ main ] # Trigger the workflow on pull requests targeting 'main'

  # Allows you to run this workflow manually from the Actions tab in GitHub
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest # Use the latest Ubuntu Linux runner provided by GitHub

    permissions:
      contents: read # Allow read access to the repository
      packages: write # Allow write access to GitHub Packages (for GHCR)

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Build and Push Docker Image
      # The image name will be ghcr.io/Specia-cipher/task-manager-app
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/task-manager-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # NEW STEP 5: Run Trivy Vulnerability Scan
      # This step scans the Docker image for known vulnerabilities.
      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master # Use the official Trivy action
        with:
          image-ref: 'ghcr.io/${{ github.repository_owner }}/task-manager-app:latest' # Reference the image built in the previous step
          format: 'table' # Output format (table, json, sarif)
          output: 'trivy-results.txt' # Save results to a file
          severity: 'CRITICAL,HIGH' # Only report Critical and High severity vulnerabilities
          # You can add --exit-code 1 to fail the workflow if vulnerabilities are found:
          # exit-code: '1'
          # ignore-unfixed: true # Ignore vulnerabilities for which no fix is available

      # Optional: Upload scan results as a workflow artifact
      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.txt
